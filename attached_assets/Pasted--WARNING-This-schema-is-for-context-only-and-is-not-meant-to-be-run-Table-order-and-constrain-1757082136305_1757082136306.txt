-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.account_types (
  id integer NOT NULL DEFAULT nextval('account_types_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  description text,
  CONSTRAINT account_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.accounts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  account_number text NOT NULL UNIQUE,
  routing_number text DEFAULT '075915826'::text,
  account_type text NOT NULL,
  balance numeric DEFAULT 0.00,
  status text DEFAULT 'limited'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT accounts_pkey PRIMARY KEY (id),
  CONSTRAINT accounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT accounts_account_type_fkey FOREIGN KEY (account_type) REFERENCES public.account_types(name)
);
CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  username text NOT NULL UNIQUE,
  email text NOT NULL UNIQUE,
  role text DEFAULT 'admin'::text,
  password_hash text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT admin_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.applications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  applied_at timestamp with time zone DEFAULT now(),
  status text DEFAULT 'received'::text,
  account_number text,
  notes text,
  CONSTRAINT applications_pkey PRIMARY KEY (id),
  CONSTRAINT applications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.auth_info (
  user_id uuid NOT NULL,
  last_login timestamp with time zone,
  mfa_enabled boolean DEFAULT false,
  failed_attempts integer DEFAULT 0,
  CONSTRAINT auth_info_pkey PRIMARY KEY (user_id),
  CONSTRAINT auth_info_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.cards (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  account_id uuid,
  card_number text NOT NULL,
  card_type text NOT NULL,
  expiration_date date NOT NULL,
  cvv text NOT NULL,
  status text DEFAULT 'active'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cards_pkey PRIMARY KEY (id),
  CONSTRAINT cards_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id)
);
CREATE TABLE public.countries (
  code text NOT NULL,
  name text NOT NULL,
  CONSTRAINT countries_pkey PRIMARY KEY (code)
);
CREATE TABLE public.crypto (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  account_id uuid,
  crypto_type text NOT NULL,
  wallet_address text NOT NULL UNIQUE,
  balance numeric DEFAULT 0.00000000,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT crypto_pkey PRIMARY KEY (id),
  CONSTRAINT crypto_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id)
);
CREATE TABLE public.investments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  account_id uuid,
  investment_type text NOT NULL,
  asset_name text NOT NULL,
  quantity numeric NOT NULL,
  purchase_price numeric NOT NULL,
  current_value numeric NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT investments_pkey PRIMARY KEY (id),
  CONSTRAINT investments_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id)
);
CREATE TABLE public.loans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  loan_type text NOT NULL,
  principal numeric NOT NULL,
  interest_rate numeric NOT NULL,
  term_months integer NOT NULL,
  status text DEFAULT 'pending'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT loans_pkey PRIMARY KEY (id),
  CONSTRAINT loans_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  type text NOT NULL,
  title text NOT NULL,
  message text NOT NULL,
  read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.states (
  code text NOT NULL,
  name text NOT NULL,
  country_code text,
  CONSTRAINT states_pkey PRIMARY KEY (code),
  CONSTRAINT states_country_code_fkey FOREIGN KEY (country_code) REFERENCES public.countries(code)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  account_id uuid,
  type text NOT NULL,
  amount numeric NOT NULL,
  status text DEFAULT 'pending'::text,
  reference text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id)
);
CREATE TABLE public.user_account_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  account_type_id integer NOT NULL,
  selected_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_account_types_pkey PRIMARY KEY (id),
  CONSTRAINT user_account_types_account_type_id_fkey FOREIGN KEY (account_type_id) REFERENCES public.account_types(id),
  CONSTRAINT user_account_types_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_employment (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  employment_status text NOT NULL,
  annual_income numeric,
  company_name text,
  position text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_employment_pkey PRIMARY KEY (id),
  CONSTRAINT user_employment_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  first_name text NOT NULL,
  middle_name text,
  last_name text NOT NULL,
  mothers_maiden_name text,
  email text NOT NULL UNIQUE,
  phone text,
  ssn text,
  id_number text,
  dob date,
  address_line1 text NOT NULL,
  address_line2 text,
  city text NOT NULL,
  state text NOT NULL,
  county text,
  country text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_country_fkey FOREIGN KEY (country) REFERENCES public.countries(code),
  CONSTRAINT users_state_fkey FOREIGN KEY (state) REFERENCES public.states(code)
);
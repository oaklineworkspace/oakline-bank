Build a full-stack debit card feature for my Supabase + Next.js banking app.

My database schema already has the following tables: cards, card_applications, card_transactions, accounts, and users.

I need the following functionality implemented:

1. Card Management API
	•	Create Card: Admin/staff can issue a new card for a user and assign it to an account.
	•	Auto-generate card_number (16 digits), expiry_date (3 years from now), and store a hashed pin_hash.
	•	Allow setting daily_limit, monthly_limit.
	•	Get Cards: A logged-in user can view only their own cards.
	•	Lock/Unlock Card: User or admin can toggle the is_locked flag.
	•	Deactivate Card: Change status to “inactive”.

2. Card Applications
	•	Submit Card Application: Logged-in users can request a debit card.
	•	Approve/Reject Applications: Staff can approve or reject card applications. On approval, a new card record is created.

3. Card Transactions
	•	Process Card Transaction:
	•	Check if is_locked = false and status = active.
	•	Check if daily/monthly spending limits are not exceeded.
	•	Deduct from accounts.balance and insert a card_transactions record.

4. Security & RLS
	•	Enforce Row Level Security (RLS) so users only see their own cards, card_transactions, and card_applications.
	•	Ensure pin_hash is securely hashed (bcrypt).

5. Frontend Pages (Next.js)
	•	Cards Page:
	•	Show a list of the user’s cards.
	•	Buttons: Lock/Unlock, View Transactions.
	•	Card Application Page:
	•	Form to request a debit card.
	•	Show application status.
	•	Card Transaction History Page:
	•	Show all transactions for a selected card.

6. Tech Requirements
	•	Use Supabase JS client for queries.
	•	Use API routes (/api/cards, /api/card-applications, /api/card-transactions).
	•	Use Next.js app or pages router (whichever matches my setup).
	•	Handle authentication with Supabase Auth.

7. Example API Endpoints
	•	POST /api/cards → Issue a new card.
	•	GET /api/cards → Get logged-in user’s cards.
	•	PATCH /api/cards/:id/lock → Lock or unlock card.
	•	POST /api/card-applications → Submit an application.
	•	PATCH /api/card-applications/:id → Approve/reject application.
	•	POST /api/card-transactions → Process card transaction.